# Generated by Django 5.0.14 on 2025-08-20 09:03

import base.models
import django.core.validators
import django.db.models.deletion
import encrypted_model_fields.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Key',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', encrypted_model_fields.fields.EncryptedCharField()),
                ('label', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='keys_created', to=settings.AUTH_USER_MODEL)),
                ('updating_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='keys_updated', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Process',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('query', models.TextField(max_length=1000)),
                ('author_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='processes_created', to=settings.AUTH_USER_MODEL)),
                ('updating_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='processes_updated', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Spreadsheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100, unique=True)),
                ('url', models.URLField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spreadsheets_created', to=settings.AUTH_USER_MODEL)),
                ('key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.key')),
                ('updating_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spreadsheets_updated', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SpreadsheetIn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100, unique=True)),
                ('data_cell_range', models.CharField(help_text='Enter a valid Excel range, e.g., A1:XFD1048576', max_length=25, validators=[base.models.validate_excel_range])),
                ('worksheet_id', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spreadsheetsin_created', to=settings.AUTH_USER_MODEL)),
                ('spreadsheet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.spreadsheet')),
                ('updating_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spreadsheetsin_updated', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SpreadsheetOut',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100, unique=True)),
                ('data_cell', models.CharField(help_text='Enter a valid Excel cell, e.g., B12', max_length=10, validators=[base.models.validate_excel_cell])),
                ('worksheet_id', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spreadsheetsout_created', to=settings.AUTH_USER_MODEL)),
                ('spreadsheet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.spreadsheet')),
                ('updating_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spreadsheetsout_updated', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProcessSpreadsheetIn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('process', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.process')),
                ('spreadsheet_in', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.spreadsheetin')),
            ],
            options={
                'unique_together': {('process', 'spreadsheet_in')},
            },
        ),
        migrations.CreateModel(
            name='ProcessSpreadsheetOut',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('process', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.process')),
                ('spreadsheet_out', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.spreadsheetout')),
            ],
            options={
                'unique_together': {('process', 'spreadsheet_out')},
            },
        ),
    ]
