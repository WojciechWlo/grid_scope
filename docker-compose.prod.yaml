version: '3.9'

services:
  backend:
    build:
      context: ./grid_scope_backend
      dockerfile: Dockerfile.prod
    container_name: backend_prod
    ports:
      - "${BACKEND_PORT}:8000"
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - TECH_USER=${TECH_USER}
      - TECH_USER_PASSWORD=${TECH_USER_PASSWORD}
      - TEMP_USER=${TEMP_USER}
      - TEMP_USER_PASSWORD=${TEMP_USER_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DJANGO_ENCRYPTION_KEY=${DJANGO_ENCRYPTION_KEY}
      - FRONTEND_ADDRESS=${FRONTEND_ADDRESS}
    networks:
      - infisical_backend
      - backend_frontend
      - mssql_backend
    env_file:
      - .env.prod
    depends_on:
      mssql-init:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "curl", "--cacert", "/certs/cert.crt", "-f", "https://localhost:8000/core/health/"]
      interval: 10s
      retries: 5
      timeout: 5s
      start_period: 10s
    volumes:
      - ./certs:/certs

  frontend:
    build:
      context: ./grid_scope_frontend
      dockerfile: Dockerfile.prod
      args:
        REACT_APP_BACKEND_ADDRESS: ${BACKEND_ADDRESS}
    container_name: frontend_prod
    ports:
      # - "${FRONTEND_PORT}:80"
      - "${FRONTEND_PORT}:443"
    networks:
      - backend_frontend
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - ./certs:/etc/ssl/certs/
      - ./certs:/etc/ssl/private/

  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: mssql_prod
    environment:
      - ACCEPT_EULA=${ACCEPT_EULA}
      - SA_PASSWORD=${DB_PASSWORD}
      - MSSQL_PID=${MSSQL_PID}
    ports:
      - "${DB_PORT}:1433"
    volumes:
      - mssql_data:/var/opt/mssql
    healthcheck:
      test: ["CMD", "/opt/mssql-tools18/bin/sqlcmd", "-S", "localhost", "-U", "${DB_USER}", "-P", "${DB_PASSWORD}", "-N", "-C", "-Q", "SELECT 1"]
      interval: 10s
      retries: 10
    networks:
      - mssql
      - mssql_backend

  mssql-init:
    build:
      context: ./mssql
      dockerfile: Dockerfile.prod
    container_name: mssql-init_prod 
    depends_on:
      mssql:
        condition: service_healthy
    entrypoint: >
      /bin/bash -c "
        echo 'Initializing database...';
        /opt/mssql-tools18/bin/sqlcmd -S mssql -U ${DB_USER} -P ${DB_PASSWORD} -N -C -i /initdb.sql;
        touch /markers/mssql_initdb_prod;
        echo 'Database initialization done.';
      "
    networks:
      - mssql

volumes:
  mssql_data:

networks:
  mssql_backend:
  backend_frontend:
  infisical_backend:
  mssql:
