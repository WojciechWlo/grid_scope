version: '3.9'

services:
  backend:
    build:
      context: ./grid_scope_backend
    volumes:
      - ./grid_scope_backend:/app
      - ./markers:/markers
    ports:
      - "${BACKEND_PORT}:8000"
    environment:
      - PYTHONUNBUFFERED=${PYTHONUNBUFFERED}
      - PYTHONDONTWRITEBYTECODE=${PYTHONDONTWRITEBYTECODE}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - TECH_USER=${TECH_USER}
      - TECH_USER_PASSWORD=${TECH_USER_PASSWORD}
      - TEMP_USER=${TEMP_USER}
      - TEMP_USER_PASSWORD=${TEMP_USER_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DJANGO_ENCRYPTION_KEY=${DJANGO_ENCRYPTION_KEY}
      - FRONTEND_ADDRESS=${FRONTEND_ADDRESS}
    networks:
      - infisical_backend
      - backend_frontend
      - mssql_backend
    env_file:
      - .env.dev     
    depends_on:
      mssql-init:
        condition: service_completed_successfully      

  frontend:
    build:
      context: ./grid_scope_frontend
    volumes:
      - ./grid_scope_frontend:/app
      - /app/node_modules
    ports:
      - "${FRONTEND_PORT}:3000"
    environment:
      - CHOKIDAR_USEPOLLING=${CHOKIDAR_USEPOLLING}
      - WATCHPACK_POLLING=${WATCHPACK_POLLING}
      - REACT_APP_BACKEND_ADDRESS=${BACKEND_ADDRESS}
    networks:
      - backend_frontend

  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: mssql
    environment:
      - ACCEPT_EULA=${ACCEPT_EULA}
      - SA_PASSWORD=${DB_PASSWORD}
      - MSSQL_PID=${MSSQL_PID}
    ports:
      - "${DB_PORT}:1433"
    volumes:
      - mssql_data:/var/opt/mssql
      - ./initdb.sql:/initdb.sql
    healthcheck:
      test: ["CMD", "/opt/mssql-tools18/bin/sqlcmd", "-S", "localhost", "-U", "${DB_USER}", "-P", "${DB_PASSWORD}", "-N", "-C", "-Q", "SELECT 1"]
      interval: 10s
      retries: 10
    networks:
      - mssql
      - mssql_backend

  mssql-init:
    image: mcr.microsoft.com/mssql/server:2022-latest
    depends_on:
      mssql:
        condition: service_healthy
    volumes:
      - ./initdb.sql:/initdb.sql
      - ./markers:/markers
    entrypoint: >
      /bin/bash -c "
      if [ ! -f /markers/mssql_initdb_dev ]; then
          echo 'Initializing database...'
          /opt/mssql-tools18/bin/sqlcmd -S mssql -U ${DB_USER} -P ${DB_PASSWORD} -N -C -i /initdb.sql
          touch /markers/mssql_initdb_dev
          echo 'Initialization done.'
      else
          echo 'Database already initialized. Skipping.'
      fi
      "
    networks:
      - mssql

volumes:
  mssql_data:

networks:
  mssql_backend:
  backend_frontend:
  infisical_backend:
  mssql: